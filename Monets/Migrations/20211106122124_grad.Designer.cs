// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Monets.Api.Database;

namespace Monets.Api.Migrations
{
    [DbContext(typeof(MonetsContext))]
    [Migration("20211106122124_grad")]
    partial class grad
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Monets.Api.Database.Grad", b =>
                {
                    b.Property<int>("GradId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GradId");

                    b.ToTable("Grad");
                });

            modelBuilder.Entity("Monets.Api.Database.Jelo", b =>
                {
                    b.Property<int>("JeloId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Cijena")
                        .HasColumnType("float");

                    b.Property<int?>("KategorijaId")
                        .HasColumnType("int");

                    b.Property<string>("NazivJela")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlikaPutanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("VrijemeIzradeUminutama")
                        .HasColumnType("int");

                    b.HasKey("JeloId");

                    b.HasIndex("KategorijaId");

                    b.ToTable("Jelo");
                });

            modelBuilder.Entity("Monets.Api.Database.JeloMeni", b =>
                {
                    b.Property<int>("JeloMeniId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("JeloId")
                        .HasColumnType("int");

                    b.Property<int?>("MeniId")
                        .HasColumnType("int");

                    b.HasKey("JeloMeniId");

                    b.HasIndex("JeloId");

                    b.HasIndex("MeniId");

                    b.ToTable("JeloMeni");
                });

            modelBuilder.Entity("Monets.Api.Database.JeloRezervacija", b =>
                {
                    b.Property<int>("JeloRezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("JeloId")
                        .HasColumnType("int");

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("RezervacijaId")
                        .HasColumnType("int");

                    b.HasKey("JeloRezervacijaId");

                    b.HasIndex("JeloId");

                    b.HasIndex("RezervacijaId");

                    b.ToTable("JeloRezervacija");
                });

            modelBuilder.Entity("Monets.Api.Database.Kategorija", b =>
                {
                    b.Property<int>("KategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KategorijaId");

                    b.ToTable("Kategorija");
                });

            modelBuilder.Entity("Monets.Api.Database.Klijent", b =>
                {
                    b.Property<int>("KlijentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisnickiRacunId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("KlijentId");

                    b.HasIndex("KorisnickiRacunId")
                        .IsUnique();

                    b.ToTable("Klijent");
                });

            modelBuilder.Entity("Monets.Api.Database.KorisnickiRacun", b =>
                {
                    b.Property<int>("KorisnickiRacunId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumIzmjene")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KorisnickoIme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LozinkaSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SlikaPutanja")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KorisnickiRacunId");

                    b.ToTable("KorisnickiRacun");
                });

            modelBuilder.Entity("Monets.Api.Database.Meni", b =>
                {
                    b.Property<int>("MeniId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Cijena")
                        .HasColumnType("float");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MeniId");

                    b.ToTable("Meni");
                });

            modelBuilder.Entity("Monets.Api.Database.Rejting", b =>
                {
                    b.Property<int>("RejtingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("JeloId")
                        .HasColumnType("int");

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<double?>("Ocjena")
                        .HasColumnType("float");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("RejtingId");

                    b.HasIndex("JeloId");

                    b.HasIndex("KlijentId");

                    b.ToTable("Rejting");
                });

            modelBuilder.Entity("Monets.Api.Database.Rezervacija", b =>
                {
                    b.Property<int>("RezervacijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIzmjene")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumKreiranja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumRezervacije")
                        .HasColumnType("datetime2");

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<bool?>("Placena")
                        .HasColumnType("bit");

                    b.Property<string>("Poruka")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Potvrdjena")
                        .HasColumnType("bit");

                    b.Property<string>("Sifra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("StolId")
                        .HasColumnType("int");

                    b.HasKey("RezervacijaId");

                    b.HasIndex("KlijentId");

                    b.HasIndex("StolId");

                    b.ToTable("Rezervacija");
                });

            modelBuilder.Entity("Monets.Api.Database.Stol", b =>
                {
                    b.Property<int>("StolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojMjesta")
                        .HasColumnType("int");

                    b.Property<string>("NazivStola")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StolId");

                    b.ToTable("Stol");
                });

            modelBuilder.Entity("Monets.Api.Database.Transakcija", b =>
                {
                    b.Property<int>("TransakcijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("KorisnikId")
                        .HasColumnType("int");

                    b.Property<int?>("RezervacijaId")
                        .HasColumnType("int");

                    b.Property<string>("Šifra")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TransakcijaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("RezervacijaId");

                    b.ToTable("Transakcija");
                });

            modelBuilder.Entity("Monets.Api.Database.Uloga", b =>
                {
                    b.Property<int>("UlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UlogaId");

                    b.ToTable("Uloga");
                });

            modelBuilder.Entity("Monets.Api.Database.Uposlenik", b =>
                {
                    b.Property<int>("UposlenikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumZaposlenja")
                        .HasColumnType("datetime2");

                    b.Property<int>("GradId")
                        .HasColumnType("int");

                    b.Property<int>("KorisnickiRacunId")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.HasKey("UposlenikId");

                    b.HasIndex("GradId");

                    b.HasIndex("KorisnickiRacunId")
                        .IsUnique();

                    b.ToTable("Uposlenik");
                });

            modelBuilder.Entity("Monets.Api.Database.UposlenikUloga", b =>
                {
                    b.Property<int>("UposlenikUlogaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatumIzmjene")
                        .HasColumnType("datetime2");

                    b.Property<int>("UlogaId")
                        .HasColumnType("int");

                    b.Property<int>("UposlenikId")
                        .HasColumnType("int");

                    b.HasKey("UposlenikUlogaId");

                    b.HasIndex("UlogaId");

                    b.HasIndex("UposlenikId");

                    b.ToTable("UposlenikUloga");
                });

            modelBuilder.Entity("Monets.Api.Database.Jelo", b =>
                {
                    b.HasOne("Monets.Api.Database.Kategorija", "Kategorija")
                        .WithMany("Jelo")
                        .HasForeignKey("KategorijaId");

                    b.Navigation("Kategorija");
                });

            modelBuilder.Entity("Monets.Api.Database.JeloMeni", b =>
                {
                    b.HasOne("Monets.Api.Database.Jelo", "Jelo")
                        .WithMany("JeloMeni")
                        .HasForeignKey("JeloId");

                    b.HasOne("Monets.Api.Database.Meni", "Meni")
                        .WithMany("JeloMeni")
                        .HasForeignKey("MeniId");

                    b.Navigation("Jelo");

                    b.Navigation("Meni");
                });

            modelBuilder.Entity("Monets.Api.Database.JeloRezervacija", b =>
                {
                    b.HasOne("Monets.Api.Database.Jelo", "Jelo")
                        .WithMany("JeloRezervacija")
                        .HasForeignKey("JeloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monets.Api.Database.Rezervacija", "Rezervacija")
                        .WithMany("JeloRezervacija")
                        .HasForeignKey("RezervacijaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jelo");

                    b.Navigation("Rezervacija");
                });

            modelBuilder.Entity("Monets.Api.Database.Klijent", b =>
                {
                    b.HasOne("Monets.Api.Database.KorisnickiRacun", "KorisnickiRacun")
                        .WithOne("Klijent")
                        .HasForeignKey("Monets.Api.Database.Klijent", "KorisnickiRacunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KorisnickiRacun");
                });

            modelBuilder.Entity("Monets.Api.Database.Rejting", b =>
                {
                    b.HasOne("Monets.Api.Database.Jelo", "Jelo")
                        .WithMany("Rejting")
                        .HasForeignKey("JeloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monets.Api.Database.Klijent", "Klijent")
                        .WithMany("Rejtinzi")
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jelo");

                    b.Navigation("Klijent");
                });

            modelBuilder.Entity("Monets.Api.Database.Rezervacija", b =>
                {
                    b.HasOne("Monets.Api.Database.Klijent", "Klijent")
                        .WithMany("Rezervacije")
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monets.Api.Database.Stol", "Stol")
                        .WithMany("Rezervacija")
                        .HasForeignKey("StolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klijent");

                    b.Navigation("Stol");
                });

            modelBuilder.Entity("Monets.Api.Database.Transakcija", b =>
                {
                    b.HasOne("Monets.Api.Database.KorisnickiRacun", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId");

                    b.HasOne("Monets.Api.Database.Rezervacija", "Rezervacija")
                        .WithMany("Transakcija")
                        .HasForeignKey("RezervacijaId");

                    b.Navigation("Korisnik");

                    b.Navigation("Rezervacija");
                });

            modelBuilder.Entity("Monets.Api.Database.Uposlenik", b =>
                {
                    b.HasOne("Monets.Api.Database.Grad", "Grad")
                        .WithMany("Uposlenici")
                        .HasForeignKey("GradId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monets.Api.Database.KorisnickiRacun", "KorisnickiRacun")
                        .WithOne("Uposlenik")
                        .HasForeignKey("Monets.Api.Database.Uposlenik", "KorisnickiRacunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Grad");

                    b.Navigation("KorisnickiRacun");
                });

            modelBuilder.Entity("Monets.Api.Database.UposlenikUloga", b =>
                {
                    b.HasOne("Monets.Api.Database.Uloga", "Uloga")
                        .WithMany("UposlenikUloga")
                        .HasForeignKey("UlogaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Monets.Api.Database.Uposlenik", "Uposlenik")
                        .WithMany("UposlenikUloga")
                        .HasForeignKey("UposlenikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Uloga");

                    b.Navigation("Uposlenik");
                });

            modelBuilder.Entity("Monets.Api.Database.Grad", b =>
                {
                    b.Navigation("Uposlenici");
                });

            modelBuilder.Entity("Monets.Api.Database.Jelo", b =>
                {
                    b.Navigation("JeloMeni");

                    b.Navigation("JeloRezervacija");

                    b.Navigation("Rejting");
                });

            modelBuilder.Entity("Monets.Api.Database.Kategorija", b =>
                {
                    b.Navigation("Jelo");
                });

            modelBuilder.Entity("Monets.Api.Database.Klijent", b =>
                {
                    b.Navigation("Rejtinzi");

                    b.Navigation("Rezervacije");
                });

            modelBuilder.Entity("Monets.Api.Database.KorisnickiRacun", b =>
                {
                    b.Navigation("Klijent");

                    b.Navigation("Uposlenik");
                });

            modelBuilder.Entity("Monets.Api.Database.Meni", b =>
                {
                    b.Navigation("JeloMeni");
                });

            modelBuilder.Entity("Monets.Api.Database.Rezervacija", b =>
                {
                    b.Navigation("JeloRezervacija");

                    b.Navigation("Transakcija");
                });

            modelBuilder.Entity("Monets.Api.Database.Stol", b =>
                {
                    b.Navigation("Rezervacija");
                });

            modelBuilder.Entity("Monets.Api.Database.Uloga", b =>
                {
                    b.Navigation("UposlenikUloga");
                });

            modelBuilder.Entity("Monets.Api.Database.Uposlenik", b =>
                {
                    b.Navigation("UposlenikUloga");
                });
#pragma warning restore 612, 618
        }
    }
}
